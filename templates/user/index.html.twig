{% block header %}
<!--****************************************
 Fichier : index.html.twig
 Auteur : Jean-Nyckolas Roy
 Fonctionnalité : A2
 Date : 2022-04-21
 Vérification :
 Date Nom Approuvé
 =========================================================
 Historique de modifications :
 2022-04-21 - Jean-Nyckolas - Affichage de base et ajout des filtres
 2022-04-26 - Jean-Nyckolas - Ajout des options de gestion des utilisateurs
 =========================================================
****************************************-->
{% endblock %}

{% extends 'base.html.twig' %}

{% block title %}Gestion utilisateurs{% endblock %}

{% block body %}
    <!--===================== CSS =====================-->
    <style>
        table
        {
            border-collapse: collapse;
        }
        button 
        {
            margin: 5px 0px;
        }
        a
        {
            text-decoration: none;
        }
        tr 
        {
            border: solid thin;
        }
        th 
        {
            height: 30pt;
            background-color: #e34958;
            color: white;
        }
        th, td
        {
            text-align: center;
        }
        table tr:not([hidden]):nth-child(odd) td
        {
            background-color: #d6d6d6;
        }
        img 
        {
            object-fit: cover;
            border-radius: 50%;
            height: 50pt;
            width: 50pt;
            border: solid 2px;
        }
        .arrow 
        {
            border: solid black;
            border-width: 0 3px 3px 0;
            display: inline-block;
            padding: 3px;
        }

        .up 
        {
            transform: rotate(-135deg);
            -webkit-transform: rotate(-135deg);
        }

        .down 
        {
            transform: rotate(45deg);
            -webkit-transform: rotate(45deg);
        }

        .flex-row 
        {
            display: flex;
            flex-direction: row;
        }

        .flex-column 
        {
            display: flex;
            flex-direction: column;
        }

        #searchFilter {
            width: 100pt;
        }

        #userOptions {
            margin-left: 15pt;
        }
    </style>

    <!--===================== HTML =====================-->
    {% include 'header.html.twig' %}
    <h1>Utilisateurs</h1>
    <div class="flex-row">
        <button id="filterButton" class="btn btn-light">Filtrer <i class="arrow down" id="filterArrow"></i></button>
        <div id="userOptions" hidden>
            <button id="activateUsers" class="btn btn-success">Activer</button>
            <button id="deactivateUsers" class="btn btn-danger">Désactiver</button>
        </div>
    </div>
    <div id="filters" hidden>
        <div class="flex-row">
            <div class="flex-column">
                <b>Rôle</b>
                {% for role in roles %}
                    <div>
                        <input class="roleFilter" type="checkbox" id="roleFilter{{ role.id }}" name="roleFilter{{ role.id }}" value="{{ role.name }}"/>
                        <label for="roleFilter{{ role.id }}">{{ role.name }}</label>
                    </div>
                {% endfor %}
            </div>
            <div class="flex-column">
                <b>Actif</b>
                <div>
                    <input class="activeFilter" type="checkbox" id="activeFilterTrue" name="activeFilterTrue" value="true"/>
                    <label for="activeFilterTrue">Actif</label>
                </div>
                <div>
                    <input class="activeFilter" type="checkbox" id="activeFilterFalse" name="activeFilterFalse" value="false"/>
                    <label for="activeFilterFalse">Inactif</label>
                </div>
            </div>
            <div class="flex-column">
                <b>Rechercher</b>
                <input type="text" id="searchFilter" name="searchFilter"/>
            </div>
        </div>
        <button id="applyButton" class="btn btn-primary">Appliquer</button>
    </div>
    <table class="displayTable col-12 auto">
        <tr>
            <th class="col-1"></th>
            <th class="col-1">Image</th>
            <th class="col-3">Nom</th>
            <th class="col-2">Courriel</th>
            <th class="col-2">Role</th>
            <th class="col-2">Date création</th>
            <th class="col-1">Actif</th>
        </tr>
        {% for user in userList %}
            <tr class="tableRow">
                <td><input class="selectUser" type="checkbox" id="select{{ user.id }}" name="select{{ user.id }}" value="{{ user.id }}"></td>
                <td>
                    {% if user.image %}
                        <img alt="Image profil" src="data:image/png;base64,{{ user.image }}"></img>
                    {% else %}
                        <img/>
                    {% endif %}
                </td>
                <td><a href="/profile/{{ user.id }}" class="name">{{ user.firstName }} {{ user.lastName }}</a></td>
                <td class="email">{{ user.email }}</td>
                <td class="role">{{ user.role.name }}</td>
                <td class="date">{{ user.registeredDate|date('Y-m-d') }}</td>
                <td>
                    {% if user.validAccount %}
                        <input class="active" type="checkbox" disabled checked>
                    {% else %}
                        <input class="active" type="checkbox" disabled>
                    {% endif %}
                </td>
            </tr>
        {% endfor %}
    </table>
    {% include 'footer.html.twig' %}
    <!--===================== JavaScript =====================-->
    <script async defer>
        let filterButton = document.getElementById('filterButton');
        filterButton.addEventListener('click', function()
        {
            let filterDiv = document.getElementById('filters');
            let arrow = document.getElementById('filterArrow');

            arrow.classList.toggle('up');
            arrow.classList.toggle('down');
            filterDiv.toggleAttribute('hidden');
        });

        let applyButton = document.getElementById('applyButton');
        applyButton.addEventListener('click', function()
        {
            let tableRows = document.getElementsByClassName('tableRow');

            let roleFilters = document.getElementsByClassName('roleFilter');
            let activeFilters = document.getElementsByClassName('activeFilter');
            let searchFilter = document.getElementById('searchFilter').value;

            let roleArray = [], activeArray = [];

            // Check for filters selected
            for (let rf of roleFilters) 
            {
                if (rf.checked)
                    roleArray.push(rf.value);
            }
            for (let af of activeFilters) {
                if (af.checked)
                    activeArray.push(af.value);
            }

            // Apply filters
            for (let tr of tableRows)
            {
                tr.removeAttribute('hidden');
                if (roleArray.length > 0)
                {
                    let role = tr.querySelector('.role').innerHTML;
                    if (!roleArray.includes(role))
                        tr.setAttribute('hidden', '');
                }

                if (activeArray.length > 0) 
                {
                    let active = tr.querySelector('.active');
                    if (!activeArray.includes(active.checked.toString()))
                        tr.setAttribute('hidden', '');
                }

                if (searchFilter != '') 
                {
                    let name = tr.querySelector('.name').innerHTML.toLowerCase();
                    let email = tr.querySelector('.email').innerHTML.toLowerCase();
                    if (!name.includes(searchFilter.toLowerCase()) && !email.includes(searchFilter.toLowerCase()))
                        tr.setAttribute('hidden', '');
                }
            }
        });

        let checkBoxes = document.getElementsByClassName('selectUser');
        let options = document.getElementById('userOptions');
        for (let cb of checkBoxes) 
        {
            cb.addEventListener('click', function()
            {
                let checked = false;
                for (let cb of checkBoxes) 
                {
                    if (cb.checked)
                        checked = true;
                }

                if (checked)
                    options.removeAttribute('hidden');
                else
                    options.setAttribute('hidden', '');
            });
        }

        let activateButton = document.getElementById('activateUsers');
        activateButton.addEventListener('click', function()
        {
            if (confirm('Voulez-vous activer les utilisateurs sélectionnés?'))
            {
                for (let cb of checkBoxes) 
                {
                    if (cb.checked)
                    {
                        activateUser(cb.value);
                        cb.checked = false;
                        let activeCb = cb.parentElement.parentElement.querySelector('td input.active');
                        activeCb.checked = true;
                    }
                }

                options.setAttribute('hidden', '');
            }
        });

        let deactivateButton = document.getElementById('deactivateUsers');
        deactivateButton.addEventListener('click', function()
        {
            if (confirm('Voulez-vous désactiver les utilisateurs sélectionnés?'))
            {
                for (let cb of checkBoxes) 
                {
                    if (cb.checked)
                    {
                        deactivateUser(cb.value);
                        cb.checked = false;
                        let activeCb = cb.parentElement.parentElement.querySelector('td input.active');
                        activeCb.checked = false;
                    }
                }

                options.setAttribute('hidden', '');
            }
        });

        /***** Requêtes AJAX *****/
        async function activateUser(id) {
            let response = await fetch('/activateUser/'+id);
            
            if (response.status === 200) {
                let data = await response.text();
                console.log('Activation success');
            }
        }

        async function deactivateUser(id) {
            let response = await fetch('/deactivateUser/'+id);
            
            if (response.status === 200) {
                let data = await response.text();
                console.log('Deactivation success');
            }
        }
    </script>
{% endblock %}
